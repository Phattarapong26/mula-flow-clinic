
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Star, Trophy, TrendingUp, Award } from 'lucide-react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar } from 'recharts';

const topPerformers = [
  { 
    rank: 1,
    name: '‡∏ô‡∏û.‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏î‡∏µ', 
    department: '‡∏à‡∏±‡∏Å‡∏©‡∏∏‡πÅ‡∏û‡∏ó‡∏¢‡πå',
    score: 98,
    revenue: 450000,
    patientRating: 4.9,
    efficiency: 95,
    teamwork: 92,
    innovation: 88
  },
  { 
    rank: 2,
    name: '‡∏ô‡∏≤‡∏á ‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏î‡∏π‡πÅ‡∏•‡∏î‡∏µ', 
    department: '‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
    score: 96,
    revenue: 180000,
    patientRating: 4.8,
    efficiency: 98,
    teamwork: 95,
    innovation: 85
  },
  { 
    rank: 3,
    name: '‡∏ô‡∏û.‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡πÉ‡∏™‡∏™‡∏∞‡∏≠‡∏≤‡∏î', 
    department: '‡∏à‡∏±‡∏Å‡∏©‡∏∏‡πÅ‡∏û‡∏ó‡∏¢‡πå',
    score: 94,
    revenue: 380000,
    patientRating: 4.7,
    efficiency: 92,
    teamwork: 88,
    innovation: 90
  },
  { 
    rank: 4,
    name: '‡∏ô‡∏≤‡∏¢ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏Å‡πà‡∏á', 
    department: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
    score: 91,
    revenue: 45000,
    patientRating: 4.5,
    efficiency: 94,
    teamwork: 90,
    innovation: 82
  },
  { 
    rank: 5,
    name: '‡∏ô‡∏≤‡∏á ‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏µ', 
    department: '‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£',
    score: 89,
    revenue: 35000,
    patientRating: 4.6,
    efficiency: 91,
    teamwork: 93,
    innovation: 79
  }
];

const performanceMetrics = [
  { metric: 'Revenue Generation', ‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢: 95, ‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á: 75, ‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ: 85 },
  { metric: 'Patient Satisfaction', ‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢: 98, ‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á: 96, ‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ: 94 },
  { metric: 'Efficiency', ‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢: 95, ‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á: 98, ‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ: 92 },
  { metric: 'Teamwork', ‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢: 92, ‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á: 95, ‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ: 88 },
  { metric: 'Innovation', ‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢: 88, ‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á: 85, ‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ: 90 }
];

const monthlyPerformance = [
  { month: '‡∏°.‡∏Ñ.', avgScore: 87.2 },
  { month: '‡∏Å.‡∏û.', avgScore: 89.1 },
  { month: '‡∏°‡∏µ.‡∏Ñ.', avgScore: 91.5 },
  { month: '‡πÄ‡∏°.‡∏¢.', avgScore: 90.8 },
  { month: '‡∏û.‡∏Ñ.', avgScore: 92.7 },
  { month: '‡∏°‡∏¥.‡∏¢.', avgScore: 94.3 }
];

const TopPerformance = () => {
  const averageScore = topPerformers.reduce((sum, p) => sum + p.score, 0) / topPerformers.length;
  const totalRevenue = topPerformers.reduce((sum, p) => sum + p.revenue, 0);

  return (
    <div className="p-6 space-y-6">
      <div>
        <h1 className="text-3xl font-bold text-gray-900">Performance ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</h1>
        <p className="text-gray-600 mt-1">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card className="bg-gradient-to-r from-yellow-500 to-yellow-600 text-white">
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-yellow-100">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</p>
                <p className="text-2xl font-bold">{averageScore.toFixed(1)}</p>
              </div>
              <Star className="h-8 w-8 text-yellow-200" />
            </div>
          </CardContent>
        </Card>
        
        <Card className="bg-gradient-to-r from-purple-500 to-purple-600 text-white">
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-purple-100">Top Performers</p>
                <p className="text-2xl font-bold">{topPerformers.length}</p>
              </div>
              <Trophy className="h-8 w-8 text-purple-200" />
            </div>
          </CardContent>
        </Card>
        
        <Card className="bg-gradient-to-r from-green-500 to-green-600 text-white">
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-green-100">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°</p>
                <p className="text-2xl font-bold">‡∏ø{(totalRevenue / 1000000).toFixed(1)}M</p>
              </div>
              <TrendingUp className="h-8 w-8 text-green-200" />
            </div>
          </CardContent>
        </Card>
        
        <Card className="bg-gradient-to-r from-blue-500 to-blue-600 text-white">
          <CardContent className="p-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-blue-100">‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤</p>
                <p className="text-2xl font-bold">+7.1%</p>
              </div>
              <Award className="h-8 w-8 text-blue-200" />
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle>‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</CardTitle>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={monthlyPerformance}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="month" />
                <YAxis domain={[80, 100]} />
                <Tooltip />
                <Bar dataKey="avgScore" fill="#fbbf24" name="‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢" />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Top 3 Performers</CardTitle>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <RadarChart data={performanceMetrics}>
                <PolarGrid />
                <PolarAngleAxis dataKey="metric" />
                <PolarRadiusAxis angle={90} domain={[0, 100]} />
                <Radar name="‡∏ô‡∏û.‡∏™‡∏°‡∏ä‡∏≤‡∏¢" dataKey="‡∏ô‡∏û‡∏™‡∏°‡∏ä‡∏≤‡∏¢" stroke="#3b82f6" fill="#3b82f6" fillOpacity={0.1} />
                <Radar name="‡∏ô‡∏≤‡∏á ‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á" dataKey="‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á" stroke="#10b981" fill="#10b981" fillOpacity={0.1} />
                <Radar name="‡∏ô‡∏û.‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ" dataKey="‡∏ô‡∏û‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ" stroke="#f59e0b" fill="#f59e0b" fillOpacity={0.1} />
                <Tooltip />
              </RadarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {topPerformers.map((performer, index) => (
              <div key={index} className={`p-4 rounded-lg border-2 ${
                index === 0 ? 'border-yellow-400 bg-yellow-50' :
                index === 1 ? 'border-gray-400 bg-gray-50' :
                index === 2 ? 'border-orange-400 bg-orange-50' : 'border-gray-200 bg-white'
              }`}>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-4">
                    <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white font-bold text-lg ${
                      index === 0 ? 'bg-yellow-500' :
                      index === 1 ? 'bg-gray-500' :
                      index === 2 ? 'bg-orange-500' : 'bg-blue-500'
                    }`}>
                      {performer.rank}
                    </div>
                    <div>
                      <h3 className="font-semibold text-lg">{performer.name}</h3>
                      <p className="text-gray-600">{performer.department}</p>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="flex items-center space-x-4">
                      <div>
                        <p className="text-sm text-gray-600">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°</p>
                        <p className="text-2xl font-bold text-blue-600">{performer.score}</p>
                      </div>
                      <div>
                        <p className="text-sm text-gray-600">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ</p>
                        <p className="text-lg font-semibold">‡∏ø{performer.revenue.toLocaleString()}</p>
                      </div>
                      <div>
                        <p className="text-sm text-gray-600">Rating</p>
                        <div className="flex items-center">
                          <Star className="h-4 w-4 text-yellow-400 mr-1" />
                          <p className="text-lg font-semibold">{performer.patientRating}</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="mt-3 grid grid-cols-3 gap-4 text-sm">
                  <div>
                    <span className="text-gray-600">‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û: </span>
                    <span className="font-semibold">{performer.efficiency}%</span>
                  </div>
                  <div>
                    <span className="text-gray-600">‡∏ó‡∏µ‡∏°‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å: </span>
                    <span className="font-semibold">{performer.teamwork}%</span>
                  </div>
                  <div>
                    <span className="text-gray-600">‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°: </span>
                    <span className="font-semibold">{performer.innovation}%</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default TopPerformance;
